'''
    В этом разделе будут краткие правила:
    Здесь я объясняю для себя что такие модули permutations и product, то что я раскрываю понятия ниже, возможно будут не понятны вам, но понятны мне(лучше прочитайте статьи в интернете, там правильней объясняют)

    Что такое permutations - это такая функция, которая помогает из таких букв, которые состовляют одно целое слово, но менятся друг с другами
    Пример: БАБА -> АБАБ; БААБ; АББА  и т.д. Как видно из примера, он берет, только те буквы, которые есть в слове и только такие количества, которые есть в этом слове
    Что такое product - это такая функция, которая помогает из таких букв, составить другое слово, но без разницы в каком количестве всречается определенный символ
    Пример: БАБА -> ББББ; БББА; или АААБ; ААББ; АБББ  и т.д. Как видно, product безразлично сколько раз встречается какой-то определенный символ.
    ---------------
    value = ''.join(value1) или как я обычно пишу w = ''.h=join(w)
    Метод функции join() - это функция, которая из коллекции, где есть символы в индексах, каждый этот индекс превращает в строку, при этом каждый стр.символ сливает их вместе(котангенация)

    Метод функции kjad() -

    Коллекция set -> такая коллекция, которая удаляет повторяющие значения! НО НАДО ЗАПОМНИТЬ, ЧТО SET НЕ ИМЕЕТ ИНДЕКСИРОВАННОСТИ!

    Функция len -> функция, которая позволяет считать количество(длину) элементов!

    continue ## СЛЕДУЮЩАЯ  ИТерация, пойми, что дальше код не выполняется в цикле после это continue
'''
#---------------------------------------------------------
'''
    В этом разделе будут примеры решений

    Примечание:
        СМОТРИ НА СЛОВА ИЗ УСЛОВИЯ, ТАК КАК ОТ ЭТОГО ЗАВИСИТ НУЖНО ЛИ БУДЕТ ПРИМЕНЯТЬ SET ИЛИ НЕТ!(ЧТОБЫ ИСКЛЮЧИТЬ ПОВТОРЫ СЛОВ ИЗ УСЛОВИЯ)
'''

# №1
''' Ответ: 840
Вася составляет слова из букв слова АТТЕСТАТ. Код должен состоять из 8 букв, и каждая буква в
нём должна встречаться столько же раз, сколько в заданном слове. Кроме того, в коде должны стоять
рядом две гласные или две согласные буквы. Сколько различных слов может составить Вася?

Идея:
1) Нужно будет подключить функцию permutatuins т.к. сказано из условия, что 'каждая буква в нём должна встречаться столько же раз, сколько в заданном слове.'
2) В условии нужно прописывать OR, т.к. 'коде должны стоять рядом две гласные или две согласные буквы', это значит, что могло быть так АА или ТТ, АА или ТС, ТС или АЕ, то есть видно, что могло быть разные вариации(разные пары), если было применить AND то мы бы сужали круг (пары), что не должно быть такого.
3) Кроме этого, так как у нас слово АТТЕСТАТ, где повторяются некоторые буквы(символы), то значит буквы Т могут поменятся местами так, что слово с виду не поменяется, но компьютер видит, что он поменял буквы местами, но еще раз мы этого не увидим, поэтому, чтобы исключить таких повторов(нам нужны только уникальные)
    ТО нужно подключить set(), который исключит все повторы, оставив только уникальные значения(слова)
'''
##from itertools import permutations as per
##s = set()
##for w in per('АТТЕСТАТ', r = 8):
##    w = ''.join(w)
##    if 'АА' in w or 'АЕ' in w or 'ЕА' in w or 'ТТ' in w or 'ТС' in w or 'СТ' in w:
##        s.add(w)#Добавляем в сет, чтобы отсеить такие же значения!
##print(len(s))

# №2
'''96
Вася составляет слова из букв слова АББАТИСА. Код должен состоять из 8 букв, и каждая буква в
нём должна встречаться столько же раз, сколько в заданном слове. Кроме того, в коде не должны
стоять рядом две гласные и две согласные буквы. Сколько различных слов может составить Вася?

Идея:
    Почти такая же, только условие будет другим, вместо OR будет AND, так как из условия сказано, что нужны такие пары 
    ТАкже сказано, что не встречаются в слове, то нужно применить NOT
'''
##from itertools import permutations as per
##s = set()
##for w in per('АББАТИСА', r = 8):
##    w = ''.join(w)
##    if 'АА' not in w and 'АИ' not in w and 'ИА' not in w and 'ББ' not in w and 'БТ' not in w and 'ТБ' not in w and 'ТС' not in w and 'СТ' not in w and 'БС' not in w and 'СБ' not in w:
##        s.add(w)
##print(len(s))

# №3
'''96
Вася составляет 7-буквенные коды из букв К, У, П, Ч, И, Х, А. Каждую букву нужно использовать
ровно 1 раз, при этом код не может начинаться с буквы Ч и не может содержать сочетания ИАУ.
Сколько различных кодов может составить Вася?

Идея:
    Чтобы обратится к нулевому элементу, то нужно применить [], где в аргументе прописываем такое число, которую нужно вызвать индекс
'''
##from itertools import permutations as per
##c = 0
##for w in per('КУПЧИХА', r = 7):
##    w =''.join(w)
##    if w[0] != 'Ч' and 'ИАУ' in w :
##        c+=1
##print(c)

# №4
'''
Из букв слова К А Н К А Н составляются 6-буквенные последовательности. Сколько можно
составить различных последовательностей, если известно, что в каждой из них содержится не менее 3 согласных?

ИДЕЯ:
1)Здесь имеется ввиду про то, что не про каждый из согласных, а имеется ввиду в общем (в сумме) их должно быть не менее трёх!
2)Нужно применить product, так как не сказано, что 'Каждую букву нужно использовать ровно 1 раз'
3)Нужно использовать set, так как может случится так, что появится такое же слово, которое попадётся в условии.
'''
##from itertools import product
##s = set()
##for w in product('КАНКАН', repeat = 6):
##    w = ''.join(w)
##    if w.count('К') + w.count('Н') >= 3: #Не менее трёх
##        s.add(w)
##print(len(s))

''' доп пример 
(А.М. Кабанов)
Юрий составляет 4-буквенные слова из букв П, Р, И, К, А, З. Каждую букву можно
использовать не более одного раза, при этом в слове нельзя использовать более одной гласной.
Сколько различных кодов может составить Юрий?
'''
##from itertools import permutations as per
##
##c = 0
##for w in per('ПРИКАЗ', r = 4):
##    w = ''.join(w)
##    #print(w)
##    if w.count('И') + w.count('А') <= 1: #типо чтоб одновременно использовалось либо это либо это
##        print(w)
##        c+=1
##print(c)

# №5
'''
Из букв слова Р У С Т А М составляются 6-буквенные последовательности. Сколько можно
составить различных последовательностей, если известно, что в каждой из них содержится не менее
3 согласных?

Идея:
1) Здесь нужно смореть по буквам в словах, так как от этого зависит нужно применять set или нет, в этом случае нет, так как не может быть такого случая, что встретиться такое же слово
'''
##from itertools import product
##c = 0
##for i in product('РУСТАМ',repeat = 6):
##    i = ''.join(i)
##    if i.count('С') + i.count('Т') + i.count('М') + i.count('Р') >= 3:
##        c+=1
##print(c)

# №6
'''
Сергей составляет 5-буквенные коды из букв Ж, А, Л, Е, Й. Буква Й может использоваться в коде не
более одного раза, при этом она не может стоять на первом месте, на последнем месте и рядом с
буквой Е. Все остальные буквы могут встречаться произвольное количество раз или не встречаться
совсем. Сколько различных кодов может составить Сергей?
'''
##from itertools import product
##c=0
##for w in product('ЖАЛЕЙ', repeat = 5):
##    w = ''.join(w)
##    if  (w.count('Й') == 1 or w.count('Й') == 0) and w[0] != 'Й' and w[-1] != 'Й' and ('ЕЙ' not in w and 'ЙЕ' not in w):
##        c+=1
##        #print(w)
##print(c)

# №7
'''
Миша составляет 5-буквенные коды из букв С, А, К, У, Р, А. Каждая допустимая гласная буква
может входить в код не более одного раза. Сколько кодов может составить Миша?
'''
##from itertools import product
##c = 0
##for w in product('САКУР', repeat = 5):
##    w = ''.join(w)
##    if  0<=w.count('А') <= 1 and  0<=w.count('У') <= 1 :
##        c+=1
####    print(w)
##print(c)

# №8
'''
Вася составляет 5-буквенные коды из букв Г, Е, Л, И, Й. Каждую букву нужно использовать ровно 1
раз, при этом код не может начинаться с буквы Й и не может содержать сочетания ИЕЙ. Сколько
различных кодов может составить Вася?
'''
##import itertools from permutations as per
##
##c = 0
##for w in per('ГЕЛИЙ'):
##    w = ''.join(w)
##    if w[0] != 'Й' and 'ИЕЙ' not in w:
##        c+=1
##print(c)

# №9
'''
Сколько слов длины 5, начинающихся с гласной буквы, можно составить из букв Е, Г, Э? Каждая
буква может входить в слово несколько раз. Слова не обязательно должны быть осмысленными
словами русского языка.

Идея:
1)Посмотри внимательно на условие 'начинающихся с гласной буквы',поэтому соответсвует этому условию, которое написано в программе
'''
##from itertools import product
##c = 0
##for w in product('ЕГЭ', repeat = 5):
##    w = ''.join(w)
##    if w[0] == 'Е' or w[0] == 'Э':
##        c+=1
##        print(w)
##print(c)

#10
'''
№6040
Определите количество шестизначных чисел, записанных в семеричной системе счисления, в записи коорых ровно
одна цифра 6, при этом чётные и нечётные цифры чередуются.

Идея: здест надо переформулировать условие
'''
##c=0
##from itertools import product
##for i in product('0123456',repeat = 6):
##    i=''.join(i)
##    # неможет начинаться с нуля, так как если по падется 0100 == 100, по сути ничего не меняется, но длина становится больше!!!!!!
##    if i[0] == '0' or i.count('6') != 1:
##        continue ## СЛЕДУЮЩАЯ  ИТерация, пойми, что дальше код не выполняется в цикле после это continue
##    t = True
##    for j in range(len(i) - 1): #0123456 -> 01 12 34 45 56
##        if int(i[j]) % 2 == int(i[j+1]) % 2: # Должно быть чередование!
##            t = False
##    if t == True:
##        c+=1
##print(c)

'''
    В ЭТОМ РАЗДЕЛЕ БУДУТ ТЕ ПРИМЕРЫ, КОТОРЫЕ МОЖНО РЕШИТЬ КОДОМ ИЛИ РУЧКАМИ
'''
#1
'''
Все 5-буквенные слова, составленные из букв Д, К, М, О, записаны в алфавитном порядке и
пронумерованы. Вот начало списка:
1. ДДДДД
2. ДДДДК
3. ДДДДМ
4. ДДДДО
5. ДДДКД
...
Какое количество слов находятся между словами ДОМОК и КОМОД (включая эти слова)?
ИДЕЯ: (Д - 0, К - 1, М - 2, О - 3)
       ВСЕГО 4 БУКВ, ПОЭТОМУ СИСТЕМА СЧИСЛЕНИЯ 4
'''
#print(int('03231',4)) # 237
##print(int('13230',4)) # 492
##print((492-237)+1) # так как нумерация начинается с 0 и до текущего!

#2
'''
Петя составляет пятибуквенные слова из букв слова СТЕКЛО и записывает их в алфавитном
порядке в список. Вот начало списка:
1. ЕЕЕЕЕ
2. ЕЕЕЕК
3. ЕЕЕЕЛ
4. ЕЕЕЕО
5. ЕЕЕЕС
6. ЕЕЕЕТ
...
Укажите номер первого слова в списке, начинающегося на C, в котором две буквы О стоят рядом?

Идея:
1)Так как НАЧИАНЕТСЯ НА C, то надо посмтореть на табличу и посчитать в какой позиции находится С (считать с нулевого индекса)(е - 0, к - 1, л - 2, о - 3, с - 4, т - 5)
2)Будет {433..}, "." означает, что нехватает цифр, это означает, что нужно вместо '.' поставить '0', потом перевести в 10 систему из 6(<- так как 6 букв), получается число, но это номер, а нужна позиция то +1, так как ЕЩЕ РАЗ ВСЕ НАЧИНАЕТСЯ С НУЛЯ
'''
# НАДО РЕШИТЬ РУЧКАМИ
#print(int('43300',6)) -> +1


'''
    В этом разделе будут те примеры, в которых я затррудняюсь решить!
'''
#1 
'''
Марина собирает восьмибуквенные слова из букв своего имени. Первые четыре
буквы новых слов берутся из первых четырех букв имени, так чтобы ни одна буква не повторялась. А
последние четыре буквы из последних трех букв имени, и они могут многократно повторяться. На
каком месте окажется имя МАРИАННА в отсортированном по алфавиту списке сгенерированных
слов? Нумерация начинается с 1
'''
##from itertools import product, permutations 
##
##s = list()
##for x in permutations('МАРИ', r = 4):
##    x = ''.join(x)
##for y in product('НА', repeat = 4):
##    y = ''.join(y)
##for r in x , y:
##    r = x + y
##    s.append(r)
##    print(s)
##r = x + y
##s.append(r)
##print(s)

#2
'''
Сколько существует чисел, восьмеричная запись которых содержит 6 цифр, причём все цифры
различны и никакие две чётные и две нечётные цифры не стоят рядом.

'''
##from itertools import permutations as per
##
##for w in per([0,1,2,3,4,5,6,7], r = 6):
##    w = ''.join(w)
