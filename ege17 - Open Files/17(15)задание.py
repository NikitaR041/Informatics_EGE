###15
##file = open('17-205.txt')
##a = list(map(int,file.readlines()))
##c = 0
##mx = -10**10
##for i in range(len(a) - 1):
##    if abs(a[i]) % 7 == 0 or abs(a[i+1]) % 7 == 0 and abs(a[i])+abs(a[i+1]) % 5 == 0:
##        c += 1
##        mx = max(mx,abs(a[i])+abs(a[i+1]))
##print(c,mx)
''' из дз
В файле 17-199.txt содержится последовательность целых чисел, которые принимают значения от -10000 до
10000 включительно. Тройка идущих подряд чисел последовательности называется уникальной, если только второе из них
является положительным двузначным чётным числом. Определите количество уникальных троек чисел, а затем –
максимальную из всех сумм таких троек '''
##f = open('17-199.txt')
##a = list(map(int, f.readlines()))
##mx = -10**10
##c = 0
##for i in range(len(a)- 2):
##    if 9 < a[i+1] < 100:            
##        if a[i+1] > 0 and a[i+1] % 2 == 0:
##            c+=1
##            sm = max(mx, abs(a[i]) + abs(a[i+1]) + abs(a[i+2]) )
##print(c,sm)

#из дз
'''целые значения от –10 000 до 10 000 включительно
Определите количество пар, в которых хотя бы один из двух элементов больше, чем среднее арифметическое всех чисел в файле в файле
В ответе запишите два числа: сначала количество найденных пар, а затем – максимальную сумму элементов таких пар'''
##f = open('17-1.txt')
##a = list(map(int,f.readlines()))
##c = 0
##mx = -2**10
##sr = sum(a)/len(a)
##for i in range(len(a) - 1):
##    if (a[i] > sr) or (a[i+1] > sr):
##        c+=1
##        mx = max(mx, ((a[i]) + (a[i+1])) )
##print(c,mx)

#из кл работы 14.10.2022
''' файл 17.1
Элементы последовательности могут принимать целые
значения от –10 000 до 10 000 включительно. Определите количество троек, в которых хотя бы два из трёх элементов меньше,
чем среднее арифметическое всех чисел в файле, и хотя бы два из трёх элементов делятся на 19. В ответе запишите два числа:
сначала количество найденных троек, а затем – максимальную сумму элементов таких троек. В данной задаче под тройкой
подразумевается три идущих подряд элемента последовательности.'''
##f = open('17-1.txt')
##a = list(map(int, f.readlines()))
##c = 0
##mx = - 10**10
##srd = sum(a)/len(a)
##for i in range(len(a) - 2):
##    if (a[i] <  srd and a[i+1] < srd) or (a[i+1] < srd and a[i+2] < srd) or (a[i] < srd and a[i+2]):
##        if (abs(a[i]) % 19 == 0 and abs(a[i+1]) % 19 == 0) or (abs(a[i+1]) % 19 == 0 and a[i+2] % 19 == 0) or (abs(a[i]) % 19 == 0 and abs(a[i+2] % 19 == 0)):
##            c+=1
##            mx = max(mx, a[i] + a[i+1] + a[i+2] )
##print(c, mx) ## надо смотреть в моем файле

''' Файл 17-243
Элементы последовательности могут принимать целые
значения от 0 до 10 000 включительно. Определите количество пар чисел, в которых оба элемента меньше, чем сумма цифр
всех чисел в файле, делящихся на 43. В ответе запишите два числа: сначала количество найденных пар, а затем –
максимальную сумму элементов таких пар. В данной задаче под парой подразумевается два идущих подряд элемента
последовательности.
'''
##f = open('17-243.txt')
##a = list(map(int, f.readlines()))
##c = 0
##mx = -10**10
##sum1 = 0
##for i in range(len(a)):
##    if a[i] % 43 == 0:
##        sum1 += sum(map(int,str(a[i])))
##print(sum1)
##for i in range(len(a) - 1):
##    if (a[i] < sum1) and (a[i+1] < sum1):
##        c+=1
##        mx = max(mx, a[i] + a[i+1])
##print(c, mx)

#как расчитать сумму цифр чисел в файле???
'''
sum = 0
for i in range(len(a)):
    if a[i] % 43 :
        sum += sum(map(int, str(a[i])))
'''

'''
Элементы последовательности могут принимать целые значения от 0 до 10 000. Найдите все пары элементов
последовательности, в которых в обоих числах пары сумма нечётных цифр больше суммы чётных
цифр, а сумма чисел пары не делится на минимальный элемент последовательности кратный 121. В
ответе запишите количество найденных пар, затем максимальную из сумм элементов таких пар. В
данной задаче под парой подразумевается два идущих подряд элемента последовательности
'''
##ИСПРАВИТЬ ЗАДАЧКУ, ТЕБЕ СИ ОТПРАВИЛ ПРАВИЛЬНОЕ РЕШЕНИЕ!!!!
############f = open('17-304.txt')
############a = list(map(int,f.readlines()))
############mn = 10**10
############for i in range(len(a)):
############    if a[i] % 121 == 0:
############        mn = min(mn, a[i])
##############print(mn)
############ch = nch = 0
############c = 0
############mx = -10**10
############for i in range(len(a) - 1):
############    if a[i] % 2 != 0 and a[i+1] % 2 != 0:
############        nch = sum(map(int,str(a[i])))
############    else : #a[i] % 2 == 0 and a[i+1] % 2 == 0:
############        ch = sum(map(int,str(a[i])))
############    if nch > ch and nch % mn != 0:
############        c+=1
############        mx = max(mx, a[i] + a[i+1])
############print(c,mx)

##ВАРИант 1 Поляков
'''
(П. Финкель) В файле 17-204.txt содержится последовательность целых чисел, которые принимают значения от -10000 до 10000 включительно.
Тройка идущих подряд чисел последовательности называется уникальной, если только второе из них является положительным числом, заканчивающимся на 9.
Определите количество уникальных троек чисел, а затем – максимальную из всех сумм таких троек.
'''
### ПЕределать!!!!!!!!!!
f = open('17-204.txt')
a = list(map(int,f.readlines()))
mx = -10**10
c = 0
for i in range(len(a) - 2):
    if (a[i+1] > 0 and a[i+1] % 10 == 9) or (a[i+2] > 0 and a[i+2] % 10 == 9):
        c+=1
        mx = max(mx, a[i] + a[i+1] + a[i+2])
print(c, mx)
'''
def cond(x):
  return x > 0 and x % 10 == 9

ma = 0
count = 0
for i in range(2,len(data)):
  if (not cond(data[i-2])) and cond(data[i-1]) and \
     (not cond(data[i])):
    count += 1
    ma = max(ma, sum(data[i-2:i+1]))
'''

'''
В файле 17-292.txt содержится последовательность целых чисел. Элементы
последовательности могут принимать целые значения от 0 до 10 000 включительно. Запишите в
ответе количество пар элементов последовательности, в которых модуль разности остатков от
деления обоих чисел на 17 совпадает с суммой остатков от деления этих чисел на 4. Затем запишите
минимальную сумму чисел, составляющих такую пару. В данной задаче под парой подразумевается
два идущих подряд элемента последовательности
'''
f = open('17-292.txt')
a = list(map(int,f.readlines()))
mx = -10**10
mn = 10**10
c = 0
for i in range(len(a) - 1):
    if abs(a[i] % 17 - a[i+1] % 17) == (a[i] % 4 + a[i+1] % 4):
        c+=1
        sm = min(mn, a[i] + a[i+1])
print(c,sm)
##В разработке

'''
(И. Кушнир) В файле 17-336.txt содержится последовательность целых чисел. Элементы
последовательности могут принимать целые значения от 1 до 100 000 включительно. Обозначим
через M максимальный элемент последовательности, кратный 37. Определите количество пар
последовательности, в которых хотя бы одно число делится на M, а сумма элементов пары при
делении на M дает в остатке число, большее 30. Гарантируется, что такая пара в последовательности
есть. В ответе запишите количество найденных пар и минимальную сумму элементов среди таких
пар. В данной задаче под парой подразумевается два идущих подряд элемента последовательности.
'''
file = open('17-336.txt')
a = list(map(int,file.readlines()))
M = max([i for i in a if i % 37 == 0])
c = 0
mn = 10**10
for i in range(len(a) - 1):
    if (a[i] % M == 0 or a[i+1] % M == 0) and (a[i]+a[i+1]) % M > 30:
        c+=1
        mn = min(mn, a[i]+a[i+1])
print(c,mn)
