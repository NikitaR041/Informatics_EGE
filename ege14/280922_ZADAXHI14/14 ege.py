#смотри из файла 28.09.2022 Zadachi_14
#4
##a = 128**30 + 16**60 - 16
##c = 0
##while a > 0:
##    if a % 8 == 7:
##        c+=1
##    a//=8
##print(c)
#### или
##a = 128**30 + 16**60 - 16
##w = []
##while a > 0:
##    w.append(a % 8) #Добавляет в "массив w" элеменеты из получившегося выражения
##    a//=8
##w = w[::-1] #Отзеркаливает массив,т.к. получается число 102, а верный ответ при делении с остатком 201
##            #Первая ":" - это начала массива, вторая ":" - это конец массива, "-1" это читает массив задом на перед
##print(w.count(7)) #Считает количество семёрок 
##print(sum(w))

###6
##for x in range(6,36): # начинают с 6,т.к. смотря на цифры чисел видно, что 225 и 405 это 6 основание
##    for y in range(6,36):
##        x1 = int('225',x)
##        x2 = int('405',y)
##        if x1 == x2:
##            print(x)
##            exit(0) # это как в С++ вспомогательная функция "break"

#####9
##a = 8**1341 - 4**1342 + 2**1343 - 1344
##print(bin(a).count('1'))
##### или
##a = 8**1341 - 4**1342 + 2**1343 - 1344
##w = []
##while a > 0:
##    w.append(a%2)
##    a//=2
##w = w[::-1]
##print(w.count(1))

#7
##c = 0
##for i in range(2,11):
##    w = []
##    a = 538
##    while a > 0:
##        w.append(a%i)
##        a//=i
##    if sum(w) % 2 == 0:
##        c+=i
##print(c)

#1?????????
###15 палиндром
##c = 0
##for i in range(2,11):
##    w = []
##    a = 7667
##    while a > 0:
##        w.append(a%i)
##        a//=i
##    if w == w[::-1]:
##        c+=i
##print(c)
##17
##ключевое слово ПРИ КАКОМ ОСНОВАНИИ
##mx = -10**10
##for i in range(2,11):
##    x = 456
##    c = 0
##    while x > 0:
##        if ((x % i) % 2) != 0:
##            c+=1
##        x//=i
##    if mx <= c:
##        mx = c
##        i1 = i ## мы нашли основание, при котором кол-во нечетн цифр будет МАX
##print(i1)
##18 ????
##for i in range(2,11):
##    x = 609
##    a =[]
##    while x > 0:
##        a.append(x%i)
##        x//=i
##    if a[0] % 2 != 0 and a[-1] % 2 == 0:
##        i1 = i
##print(i1)

##a = 9 ** 20 + 3**60 - 25
##w = []
##while a > 0:
##    w.append(a % 3)
##    a//=3
##w = w[::-1]
##print(w.count(2))


