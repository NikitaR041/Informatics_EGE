#Урезанная функция по переводу систем счисления!
'''
def numbersystem(number,system):
    result = ''
    while number != 0:
        result = str(number % system) + result
        number //= system
    return result
print(numbersystem(20,2))
'''

#Функция,которая проверяет на простые числа:
'''
def is_Prime(x):
    if x < 2:
        return False
    i = 2
    while i * i <= x:
        if x % i == 0:
            return False
        i+=1
    return True
print(is_Prime(5))
'''
#Функция которая проверяет на четность цифр числа
'''
def g(x): #Проверяет на четность всех цифр числа
    while x!=0:
        if x % 2 == 0:
            x//=10
        else:
            return False
    return True
'''
"""или моэно использовать all(iterable)
    Пример: all(int(i)%2== 0 for i in str(f(i))) #Какая-то функция(можно и без неё)
"""
#Функция по поиску делителей(количество делителей, нетривиальных делителей...)
'''
def dels(x):
    a = []
    i = 1
    while i**2 <= x:
        if i**2 == x:
            a.append(i)
        elif x % i == 0:
            a += [i, x // i]
        i += 1
    a.sort()
    return a
'''
#Функция по поиску делителей(если маленький отрезок)
'''
def f(x):
    c = 0
    for i in range(1, x+1):
        if x % i == 0:
            c+=1
    return x
'''
'''
    Примеры, где используются эти функции
'''
#16
'''
(П. Волгин) Алгоритм вычисления значения функции F(n), где n – целое неотрицательное число,
задан следующими соотношениями:
F(n) = 1 при n = 0
F(n) = 7·(n - 1) + F(n - 1) при n > 0
Сколько существует значений n на отрезке [2, 200], для которых значение функции F(n) является
простым числом?
'''
##def is_Prime(x):
##    i = 2
##    while i * i <= x:
##        if x % i == 0:
##            return False
##        i+=1
##    return True
##def f(n):
##    if n == 0:
##        return 1
##    if n > 0:
##        return 7*(n - 1) + f(n - 1)
##for i in range(2,201):
##    
##for x in range(1,10):
##    i = 2
##    while i * i <= x:
##        if x % i == 0:
##            з
##        i+=1
##    print('1')
##    print(x)

#16
'''
Алгоритм вычисления значения функции F(n), где n – натуральное число, задан
следующими соотношениями:
F(n) = n + 3, при n ≤ 18
F(n) = (n//3)*F(n//3) + n - 12, при n > 18, кратных 3
F(n) = F(n-1) + n*n + 5, при n > 18, не кратных 3
Здесь // обозначает деление нацело. Определите количество натуральных значений n из
отрезка [1; 800], для которых все цифры значения F(n) чётные.

Идея:
Нужно создать функцию, которая проверяет на четность всех цифр числа!
'''
##def g(x): #Проверяет на четность всех цифр числа
##    while x!=0:
##        if x % 2 == 0:
##            x//=10
##        else:
##            return False
##    return True
##def f(n):
##    if n <= 18:
##        return n + 3
##    if n > 18 and n % 3 == 0:
##        return (n // 3) * f(n//3) + n - 12
##    if n > 18 and n % 3 != 0:
##        return f(n - 1) + n*n + 5
##c = 0
##for i in range(1,801):
##    if g(f(i)) == True:
##        c+=1
##print(c)

