#2
'''
(a or not(c)) and (b or c)
'''
##print('a b c f')
##for a in [0,1]:
##    for b in [0,1]:
##        for c in [0,1]:
##            f = int((a or not(c)) and (b or c))
##            print(a,b,c,f)

#4
#print(len('00110010101100'))

#5
'''
. Автомат обрабатывает натуральное число N < 256 по следующему алгоритму:
1) Строится восьмибитная двоичная запись числа N.
2) Инвертируются все разряды исходного числа, кроме последней единицы и стоящих за ней нулей (0
заменяется на 1, 1 на 0).
3) Полученное число переводится в десятичную систему счисления.
Для какого значения N результат работы алгоритма равен 11?
'''
##for n in range(256):
##    s = bin(n)[2:]
##    s = '0' * (8 - len(s)) + s
##    s = s.replace('0','x')
##    s = s.replace('1','0')
##    s = s.replace('x','1')
##    if int(s,2) == 11:
##        print(n)

#6
'''
незадача
Определите, при каком наибольшем введенном значении переменной x программа выведет число 654
'''
##for i in range(100000):
##    x = i
##    n = 168
##    while (x+n)//1000 < 361234:
##        x = x - 3
##        n = n + 6
##    if (n//1000) == 654:
##        print(i)

#8
'''
Вася составляет слова из букв слова ШАРЛАТАН. Код должен состоять из 8 букв, и каждая буква в
нём должна встречаться столько же раз, сколько в заданном слове. Кроме того, в коде должны стоять
рядом две гласные или две согласные буквы. Сколько различных слов может составить Вася?
'''
##from itertools import permutations as per
##s = set()
##for w in per('ШАРЛАТАН', r = 8):
##    w = ''.join(w)
##    if 'АА' in w or 'ШР' in w or 'РШ' in w or 'РЛ' in w or 'ЛР' in w or 'ЛТ' in w or 'ТЛ' in w or 'ТН' in w or 'НТ' in w or 'ШН' in w or 'НШ' in w or '' in w or 'РШ' in w 

#12
'''
НАЧАЛО
 ПОКА нашлось (13) ИЛИ нашлось (32) ИЛИ нашлось (12)
 ЕСЛИ нашлось (13)
 ТО заменить (13, 31)
 КОНЕЦ ЕСЛИ
 ЕСЛИ нашлось (32)
 ТО заменить (32, 23)
 КОНЕЦ ЕСЛИ
 ЕСЛИ нашлось (12)
 ТО заменить (12, 21)
 КОНЕЦ ЕСЛИ
 КОНЕЦ ПОКА
КОНЕЦ

На вход приведённой ниже программе поступает строка, содержащая 50 цифр 1, 50 цифр 2 и 50 цифр
3, расположенных в произвольном порядке. Запишите без разделителей символы, которые имеют
порядковые номера 10, 70 и 140 в получившейся строке.
'''

#14
'''
Значение выражения 8117 + 324 – 45 записали в системе счисления с основанием 9. Сколько цифр
8 содержится в этой записи?
'''
##w = []
##a = 81**17 + 3**24 - 45
##while a > 0:
##    w.append(a % 9)
##    a//=9
##w[::-1]
##print(w.count(8))
###or
##c = 0
##a = 81**17 + 3**24 - 45
##while a > 0:
##    if a % 9 == 8:
##        c+=1
##    a//=9
##print(c)

#16
'''
. Алгоритм вычисления значения функции F(n), где n – натуральное число, задан следующими
соотношениями:
F(n) = n, при n ≤ 3
при n > 3:
 F(n) = n + 3 + F(n–1), при чётном n;
 F(n) = n*n + F(n-2), при нечётном n;
Определите количество натуральных значений n на отрезке [1; 1000], при которых F(n) кратно 7.
'''
##def f(n):
##    if n <= 3:
##        return n
##    if n > 3 and n % 2 == 0:
##        return n + 3 + f(n - 1)
##    if n > 3 and n % 2 != 0:
##        return n*n + f(n-2)
##c = 0
##for n in range(1,1001):
##    if f(n) % 7 == 0:
##        c+=1
##print(c)

#17
'''
(И. Кушнир) В файле 17-336.txt содержится последовательность целых чисел. Элементы
последовательности могут принимать целые значения от 1 до 100 000 включительно. Обозначим
через M максимальный элемент последовательности, кратный 37. Определите количество пар
последовательности, в которых хотя бы одно число делится на M, а сумма элементов пары при
делении на M дает в остатке число, большее 30. Гарантируется, что такая пара в последовательности
есть. В ответе запишите количество найденных пар и минимальную сумму элементов среди таких
пар. В данной задаче под парой подразумевается два идущих подряд элемента последовательности.
'''
##file = open('17-336.txt')
##a = list(map(int,file.readlines()))
##M = max([i for i in a if i % 37 == 0])
##c = 0
##mn = 10**10
##for i in range(len(a) - 1):
##    if (a[i] % M == 0 or a[i+1] % M == 0) and (a[i]+a[i+1]) % M > 30:
##        c+=1
##        mn = min(mn, a[i]+a[i+1])
##print(c,mn)

#19
'''
 (А. Кабанов) Два игрока, Петя и Ваня, играют в следующую игру. Перед игроками лежит две кучи
камней. Игроки ходят по очереди, первый ход делает Петя. За один ход игрок может добавить в
любую кучу один камень или увеличить количество камней в любой куче в два раза. Игра
завершается в тот момент, когда суммарное количество камней в двух кучах становится не менее 30.
Победителем считается игрок, сделавший последний ход. В начальный момент в первой куче было K
камней, а во второй – S камней, 1 ≤ K ≤ 29, 1 ≤ S ≤ 29.
Ответьте на следующие вопросы:
Вопрос 1. Сколько существует пар (K; S), таких что Ваня выигрывает первым ходом при любой игре
Пети?
Вопрос 2. При K=6, найдите минимальное и максимальное значение S, при котором у Пети есть
выигрышная стратегия, причём одновременно выполняются два условия:
− Петя не может выиграть за один ход;
− Петя может выиграть своим вторым ходом независимо от того, как будет ходить Ваня.
Найденные значения запишите в ответе в порядке возрастания.
Вопрос 3. Сколько существует пар (K; S), при котором одновременно выполняются два условия:
– у Вани есть выигрышная стратегия, позволяющая ему выиграть первым или вторым ходом при
любой игре Пети;
– у Вани нет стратегии, которая позволит ему гарантированно выиграть первым ходом.
'''

#20
'''
Определите минимальное время, через которое завершится выполнение всей совокупности
процессов, при условии, что все независимые друг от друга процессы могут выполняться
параллельно.
'''
##from csv import reader
##def calc(d,id):
##    if '0' in d[id]['rel']:
##        return d[id]['time']
##    mx = 0
##    for shID in d[id]['rel']:
##        t = calc(d, shID)
##        mx = max(mx,t)
##    d[id]['rel'] = ['0']
##    d[id]['time'] += mx
##    return d[id]['time']
##
##file = open('22-2e.csv')
##rdr = reader(file, delimiter = ';', quotechar = '"')
##d = {}
##for id,time,rel,empty in rdr:
##    d[id] = {'time': int(time), 'rel':[x.strip() for x in rel.split(';')]}
##
##mx = 0
##for id in d:
##    t = calc(d,id)
##    mx = max(t,mx)
##print(mx)
##
##for id,time,rel,empty in file:
##    print()

#21
'''
Исполнитель Калькулятор преобразует число, записанное на экране. У исполнителя есть три
команды, которым присвоены номера:
1. Прибавь 1
2. Прибавь 3
3. Умножь на 2
Первая команда увеличивает число на экране на 1, вторая увеличивает его на 3, третья – умножает на
2. Программа для исполнителя – это последовательность команд. Сколько существует программ,
которые преобразуют исходное число 4 в число 93, и при этом траектория вычислений содержит
число 10 и не содержит число 28. Также программа не должна содержать двух команд «Прибавь 1»
подряд.
'''
def f(x,n,l):
    if x > n or x == 28:
        return 0
    if x == n:
        return 1
    return f(x+1,n)+f(x+3,n)+f(x*2,n)
print(f(4,10)*f(10,93))
    
