#24 - 1 номер
#1)
'''
В текстовом файле  k7-0.txt находится цепочка из символов латинского алфавита A, B, C.
Найдите длину самой длинной подцепочки, состоящей из символов C.
'''
##s = open('k7-0.txt').readline()#выводит только первую строку
##
##mx = l = 0 # длина чекущее
##for x in s:
##    if x == 'c' :
##        l += 1
##    else:
##        l = 0
##    mx = max(mx,l)
##print(mx) #otvet 0 
#################################
##s1 = 'c'
##while s1 in s :
##    mx = max(mx,len(s1))
##    s1+='c'
##print(mx)

#21)
'''
В текстовом файле k7a-1.txt находится цепочка из символов латинского алфавита A, B, C, D, E.
Найдите длину самой длинной подцепочки, состоящей из символов A, B или C (в произвольном порядке).
'''
##s = open('k7a-1.txt').readline()
##mx = l = 0
##for x in s:
##    if x == 'A' or x == 'B' or x == 'C':
##        l+= 1
##    else:
##        l = 0
##    mx = max(mx,l)
##print(mx)

#27
'''
В текстовом файле k7b-1.txt находится цепочка из символов латинского алфавита A, B, C, D, E.
Найдите максимальную длину цепочки вида EABEABEABE... (состоящей из фрагментов EAB, последний фрагмент может быть неполным).
'''
##s = open('k7b-1.txt').readline()
##mx = l = 0
##s1 = 'EAB'
##while s1 in s :
##    mx = max(mx, len(s1))
##    s1+='EAB'
##s1 = s1[:-3]
##if s1 + 'E' in s :
##    mx= max(len(s1)+1,mx)
##print(mx)

#33)
'''
 В текстовом файле k7c-1.txt находится цепочка из символов латинского алфавита A, B, C, D, E.
 Найдите количество цепочек длины 3, удовлетворяющих следующим условиям: 
•	1-й символ – один из символов B, C или D;
•	2-й символ – один из символов B, D, E, который не совпадает с первым; 
•	3-й символ – один из символов B, C, E, который не совпадает со вторым.
'''
##s = open('k7c-1.txt').readline()
##c = 0
##for i in range(len(s)-2):
##    if (s[i] in 'BCD') and (s[i+1] in 'BDE' and s[i] != s[i+1]) and (s[i+2] in 'BCE' and s[i+1] != s[i+2]):
##        c+=1
##print(c)

#38)
'''
В текстовом файле k7c-6.txt находится цепочка из символов латинского алфавита A, B, C, D, E, F.
Найдите количество цепочек длины 3, в которых символы не совпадают.
'''
##s = open('k7c-6.txt').readline()
##c = 0
##for i in range(len(s)-2):#вычитаем 2, так как надо взять 3
##    if s[i] != s[i+1] and  s[i+1]!= s[i+2] and s[i+2]!= s[i]:
##        c+=1
##print(c)

#39)
'''
В текстовом файле  k7-m1.txt находится цепочка из прописных (заглавных) символов латинского алфавита A, B, C.
Найдите длину самой короткой подцепочки, состоящей из символов C (C-подцепочки).
В ответе через пробел укажите: длину найденной подцепочки (если C-подцепочек нет, то 0), количество C-подцепочек и длину исходной цепочки.
'''
##a = open('k7-m1.txt').readline()
##mn = 10 ** 10
##l = 0
##g = 0
##for x in a:
##    if  x == 'C':
##        l+=1
##    else:
##        if l>0:
##            mn=min(mn,l)
##            g += 1
##        l=0
##print(g, mn,len(a))
#47)
'''
В текстовом файле k7-m22.txt находится цепочка из прописных (заглавных) символов латинского алфавита A, B, C, D, E, F.
Найдите количество подцепочек из трех символов, в которых символы идут в обратном алфавитном порядке и индекс первой буквы последней найденной подцепочки (первый символ исходной цепочки имеет индекс 0).
Например, у цепочки FDCBA таких подцепочек три: FDC, DCB и CBA, а индекс первой буквы последней найденной подцепочки (CBA) два и, следовательно, ответ: 3 2.
'''
##a = open('k7-m22.txt').readline()
##c = 0
##mx = -10**10
##for i in range(len(a)- 2):
##    if a[i] > a[i+1] > a[i+2]:
##        c+=1
##        mx = i
##print(c, mx)

#50)
'''
В текстовом файле k7-m25.txt находится цепочка из прописных (заглавных) символов латинского алфавита A, B, C, D, E, F.
Найдите количество подцепочек из трех символов, в которых средний символ ближе к концу алфавита, чем символ слева и справа от него,
а также найдите индекс первой буквы последней найденной подцепочки (первый символ исходной цепочки имеет индекс 0).
Например, у цепочки ACBFAED таких подцепочек три: ACB, BFA и AED, а индекс первой буквы последней найденной подцепочки (AED) четыре и, следовательно, ответ: 3 4.
'''
##a = open('k7-m25.txt').readline()
##c = 0
##mx = 0
##for i in range(len(a) -  2):
##    if a[i+1] > a[i] and a[i+1] > a[i+2]:
##        c+=1
##        mx = i
##print(c, mx) # Ответ : 19 156

#52)
'''
В текстовом файле k8-0.txt находится цепочка из символов, в которую могут входить заглавные буквы латинского алфавита A…Z и десятичные цифры.
Найдите длину самой длинной подцепочки, состоящей из одинаковых символов. Если в файл несколько цепочек одинаковой длины, нужно взять первую из них.
Выведите сначала символ, из которого строится эта подцепочка, а затем через пробел – длину этой подцепочки. 
'''
##########a = open('k8-0.txt').readline()
##########c = 1
##########g = 0
##########t = 0
##########mn = -(10 ** 10)
##########for i in range(len(a) -1):
##########    if a[i] == a[i+1]:
##########        c+=1
##########    else:
##########        c=1
##########    if mn < c:
##########        mn = max(mn,c)
##########        t = a[i]  
##########print(mn, t)

#77)
'''
Текстовый файл k8-1.txt состоит не более чем из 10**6 символов.
Определите максимальное количество идущих подряд символов, среди которых каждые два соседних различны.
'''
##a = open('k8-1.txt').readline()
##c = 0
##mx = -10**10
##for i in range(len(a) - 1):
##    if a[i] != a[i+1]:
##        c+=1
##    else:
##        c=1
##    mx = max(mx, c)
##print(mx)

#87)
'''
Текстовый файл 24-1.txt состоит не более чем из 10**6 символов.
Определите максимальное нечётное число, записанное в этом файле.
'''
##a = open('24-1.txt').readline()
##c = 1
##t = 0
##mn = -(10 ** 10)
##tmp = ''
##for x in a:
##    if x.isdigit():
##        tmp+=x
##    else:
##        if len(tmp):
##            y = int(tmp)
##            if y % 2 !=0:
##                mn = max(mn,y)
##            tmp = '' 
##print(mn)

#93)
'''
Текстовый файл 24.txt содержит последовательность из строчных и заглавных букв английского алфавита и цифр,
всего не более 10**6 символов.
Определите длину наибольшей возрастающей подпоследовательности. 
'''
##a = open('24.txt').readline()
##c = 1
##mx = -10**10
##for i in range(len(a) - 1):
##    if a[i] > a[i+1]:
##        c+=1
##        mx = max(mx,c)
##    else:
##        c=1
##        mx = max(mx,c)
##print(mx)

#110)
'''
Текстовый файл 24-2.txt содержит последовательность из строчных и заглавных букв английского алфавита и цифр,
всего не более 10**6 символов.
Определите длину наибольшей убывающей подпоследовательности.
'''
##a = open('24-2.txt').readline()
##c = 0
##mx = -10**10
##for i in range(len(a) - 1):
##    if a[i] > a[i+1]:
##        c+=1
##        mx = max(mx, c)
##    else:
##        c=1
##print(mx)

#125)
'''
Текстовый файл 24-5.txt содержит последовательность из символов «(» и «)», всего не более 10**6 символов.
Определить количество пар скобок «()» в этом файле.
'''
##a = open('24-5.txt').readline()
##c = 0
##for i in range(len(a) - 1):
##    if a[i] == '(' and a[i+1] == ')':
##        c+=1
##print(c)

#134)

'''
(Е. Джобс) Текстовый файл 24-j3.txt состоит не более чем из 10**6 символов I, K, O, T. Сколько раз встречаются комбинации «TIK» и «TOK». 
'''
##a = open('24-j3.txt').readline()
##c = 0
##print(a.count('TIK') + a.count('TOK'))

#137)
'''
Текстовый файл 24-s1.txt состоит не более чем из 10**6 заглавных латинских букв (A..Z). Текст разбит на строки различной длины.
Определите количество строк, в которых буква J встречается чаще, чем буква E.
'''
##a = open('24-s1.txt') ## НОВАЯ СТРОКА
##c = 0
##for i in a:
##    if i.count('J') > i.count('E'):
##        c+=1    
##print(c) 

#141)
'''
Текстовый файл 24-s1.txt состоит не более чем из 10**6 заглавных латинских букв (A..Z).
Текст разбит на строки различной длины. Определите количество строк, в которых встречается комбинация F*O, где звёздочка обозначает любой символ.
'''
a = open('24-s1.txt').readline()
c = 0
for i in a:
    flag = False
    for j in range(len(a) - 2):
        if a[j] == 'F' and a[j+2] == 'O':
            flag = True
    if flag > 0:
        c+=1
print(c)
