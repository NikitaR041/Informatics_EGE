from itertools import product
'''
    Этот раздел будет предназначен для каких-либо функций
    1) функция, которая ищет делители среди какого-то числа: (i -> счётчик)
    def dels(x):
    a = []
    i = 1
    while i**2 <= x:
        if i**2 == x:
            a.append(i)
        elif x % i == 0:
            a += [i, x // i]
        i += 1
    a.sort()
    return a

    2) Функция, которая возвращает True or False простого числа
    def prime(x):
    if x < 2:
        return False
    i = 2
    while i**2 < x:
        if x % i == 0:
            return False
        i += 1
    return True

    3)Функция(урезанная),которая переводит число в любое другое (но не выше с.с 10)
    def numbersystem(number,system):
    result = ''
    while number != 0:
        result = str(number%system) + result
        number//=system
    return result
'''
#Пример:

'''
    Этот раздел будет предназначен для примеров
'''
#Пример 1, где используется только '?'
'''
206) (А. Кабанов) Назовём маской числа последовательность цифр, в которой
также могут встречаться следующие символы:
— символ «?» означает ровно одну произвольную цифру;
— символ «*» означает любую последовательность цифр произвольной длины;
в том числе «*» может задавать и пустую последовательность.
Например, маске 123*4?5 соответствуют числа 123405 и 12300425.
Среди натуральных чисел, не превышающих 10**9, найдите все числа,
соответствующие маске 1?34567?9 и делящиеся на 17 без остатка. В ответе
запишите в первом столбце таблицы все найденные числа в порядке возрастания,
а во втором столбце — соответствующие им частные от деления на 17.
'''
# a = [] # Список подходящих значений
# for x1 in range(10): # Поиск первого вопроса
#    for x2 in range(10): # Поиск второго вопроса
#        x = int('1' + str(x1) + '34567' + str(x2) + '9') # Создание полной строки и перевод в int для проверки условия
#        if x % 17 == 0: # Проверка по условию
#            a.append(x) # Добавляем в список верных значений
# a.sort() # Сортировка подходящий значений
# for i in a: # Проходимся по значениям
#    print(i, i // 17) # Вывод ответа

#Пример 2, где используется '?' и '*'
''' смотри тетрадь!!!
207) (А. Кабанов) Назовём маской числа последовательность цифр, в которой
также могут встречаться следующие символы:
— символ «?» означает ровно одну произвольную цифру;
— символ «*» означает любую последовательность цифр произвольной длины;
в том числе «*» может задавать и пустую последовательность.
Например, маске 123*4?5 соответствуют числа 123405 и 12300425.
Среди натуральных чисел, не превышающих 10**9, найдите все числа,
соответствующие маске 123*567? и делящиеся на 169 без остатка. В ответе
запишите в первом столбце таблицы все найденные числа в порядке возрастания,
а во втором столбце — соответствующие им частные от деления на 169.

Идея:
1)В задании сказано, что 'x'(см.условие), поэтому не должна длина превышать 10 значений(0,...,9), по факту вместо '*' может быть пустое, одно или два значения
'''
# a = []
# l = [''] # Создание всех возможных доп символов в список
# for i in range(2):
#    l = l + [''.join(j) for j in product('0123456789', repeati+1)] # Добавление новых возможных элементов
# for x1 in range(10):
#    for x2 in l:
#        x = int('123' + x2 + '567' + str(x1))
#        if x % 169 == 0:
#            a.append(x)
# a.sort()
# for i in a:
#    print(i, i // 169)
#Или, но чуть дольше будет решаться!
# from fnmatch import *
# for x in range(0,10**9,169):
#     if fnmatch(str(x),'123*567?'):
#         print(x,x//169)

#-------------------------------------------------------------------------------------------------------------------
'''
    Ниже пойдут примеры из компегэ
'''
# №1
'''
Среди натуральных чисел не превышающих 10**9, найдите все числа, соответсвующие маске 12345?6?8 и делящиеся на 17 без остатка.
В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания, а во втором столбце - соотвествующие им частные от деления на 17.

Идея:
1)Если нам говорят 10**9, то это значит,что длина не превышает 9!
'''
# a = []
# for x1 in '0123456789':
#     for x2 in '0123456789':
#         s = int('12345' + x1 + '6' + x2 + '8')
#         if s % 17 == 0:
#             a.append(s)
# a.sort
# for i in a:
#     print(i,i//17)
# №2
'''
Среди натуральных чисел, не превышающих 10**8, найдите все числа, соотвествующие маске 1234*7, делящиеся на 141 без остатка.
В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания, а во втором столбце - соотвествующие  им результаты деления этих чисел на 141.
Количество строк в таблице для ответа избыточно.

Идея:
1)Так как '*' это любой количество символов(даже пустота), то нужно смотреть на что говорят
2)Так как 'не превышающих 10**8', то значит длина 8 -> вместо звездочек могут быть (12347; 123407;1234007;12340007) - длина 8!
'''
# from itertools import product
# a = []
# l = ['']
# for i in range(3):
#     l = l + [''.join(j) for j in product('0123456789', repeat = i+1)]
# for x1 in l:
#     s = int('1234' + x1 + '7')
#     if s % 141 == 0:
#         a.append(s)
# a.sort()
# for g in a:
#     print(g,g//141)

# №3
'''
Среди натуральных чисел, не превышающих 10**9, найдите все числа, соотвествующие маске 123*567? и делящиеся на 169 без остатка.
В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания, а во втором столбце - соответсвующие им частные от деления на 169.

Идея:
Максимум * -> 1235670;12305670;123005670;
'''
# from itertools import product
# a = []
# l = ['']
# for i in range(2):
#     l = l + [''.join(j) for j in product('0123456789', repeat = i+1)]
# for x1 in range(10):
#     for x2 in l:
#         s = int('123' + x2  + '567' + str(x1))
#         if s % 169 == 0:
#             a.append(s)
# a.sort()
# for g in a:
#     print(g, g // 169)

# №4
'''
НЕ превышает 10**6, найти такие числа, соотвествующие маске 12*45* и делящиеся на число 51 без остатка.
В ответ записать в первом столбце в порядке возрастания, а во втором столбце - соотвествующие им частные от деления на 51

Идея:
так как длина 6, то 1245;124500;120450;120045, то есть '*' могут быть макс 2
'''
# from itertools import product
# a = []
# l = ['']
# for i in range(2):
#     l = l + [''.join(j) for j in product('0123456789', repeat = i + 1)]
# for x1 in l:
#     for x2 in l:
#         s = int('12' + x1 + '45' + x2)
#         if s % 51 == 0 and len(str(s)) <= 6:
#             a.append(s)
# a.sort()
# for g in a:
#     print(g,g//51)
# # или через функцию fnmatch
# from fnmatch import *
# for x in range(0,10**6,51):
#     if fnmatch(str(x),'12*45*'):
#         print(x, x//51)

# №5
'''
Не превышающих 10**10, найти всес числа, соотвествующие маске 1?2139*4, делящиеся на 2023 без остатка.
Продолжение такое же как и в предыдущих заданиях.

Идея:
Так как длина 10, то вместо '?' должно быть ОДНО значение!, * -> 1021394;10213904;102139004;1021390004 -> * 3 штучки
'''
# a = []
# l = ['']
# for i in range(3):
#     l = l + [''.join(j) for j in product('0123456789', repeat = i+1)]
# for x1 in range(10):
#     for x2 in l:
#         s = int('1' + str(x1) + '2139' + x2 + '4')
#         if s % 2023 == 0:
#             a.append(s)
# a.sort()
# for g in a:
#     print(g, g//2023)
# Или через fnmatch

# from fnmatch import *
# for x in range(0,10**10,2023):
#     if fnmatch(str(x), '1?2139*4'):
#         print(x,x//2023)

# №6
''' А.Агафонцев
Среди натуральных чисел, больших 65000, найдите первые 7 чисел, удовлетворяющих маске 6*97*5? и имеющих
не менее 4 чётных делителей. Запишите в ответе найдненные числа в порядке возрастания, справа от каждого
чиса запишите сумму его чётных делителей.
'''
# from itertools import product
# a = []
# a1 = ['']
# for i in range(2):
#     a1+=[''.join(j) for j in product('0123456789',repeat = i+1)]
# for x1 in range(10):
#     for x2 in a1:
#         s = int('6' + x2 + '97' + x2 + '5' + str(x1))
#         if

# - - - - - - не из КЕГЭ

# 7
''' Номер из Полякова208) ##211,212,213
(А. Кабанов) Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
— символ «?» означает ровно одну произвольную цифру;
— символ «*» означает любую последовательность цифр произвольной длины; в том числе «*» может задавать и пустую последовательность.
Например, маске 123*4?5 соответствуют числа 123405 и 12300425.
Среди натуральных чисел, не превышающих 106, найдите все числа, соответствующие маске 12*45* и делящиеся на число 51 без остатка. В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания, а во втором столбце — соответствующие им частные от деления на 51.
'''
##from itertools import product
##a = []
##l = ['']
##for x in range(2):
##    l += [''.join(y) for y in product('0123456789', repeat = x+1)]
##for x1 in l:
##    for x2 in l:
##        x = int('12' + x1 + '45' + x2)
##        if x % 51 == 0  and x < 10**6:
##            a.append(x)
##a.sort()
##for i in a:
##    print(i,i//51)

#8
'''
211)	(Б. Михлин) Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
- символ «?» означает ровно одну произвольную цифру;
- символ «*» означает любую последовательность цифр произвольной длины; в том числе «*» может задавать и пустую последовательность.
Например, маске 123*4?5 соответствуют числа 123405 и 12300425. Найдите все натуральные числа, делящиеся нацело на 7916, шестнадцатеричный код которых
соответствует маске 1?DED?CED.
В ответе запишите найденные числа в десятичной системе счисления в порядке убывания, а справа от каждого числа – соответствующее частное от деления на 7916.
'''
##a = []
##for x1 in range(16):
##    for x2 in range(16):
##        x = int('1' + hex(x1)[2::] + 'DED' + hex(x2)[2::] + 'CED', 16)
##        if x % int('79',16) == 0:
##        #if not(x % int('79', 16)):
##            a.append(x)
##a.sort(reverse=True)
##for i in a:
##    print(i, i // int('79', 16))

#9
''' 
(Б. Михлин) Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
- символ «?» означает ровно одну произвольную цифру;
- символ «*» означает любую последовательность цифр произвольной длины; в том числе «*» может задавать и пустую последовательность.
Например, маске 123*4?5 соответствуют числа 123405 и 12300425. Найдите все натуральные числа, делящиеся нацело на BA16,
шестнадцатеричный код которых соответствует маске 1?DED?BABA.
В ответе запишите найденные числа в десятичной системе счисления в порядке убывания, а справа от каждого числа – соответствующее частное от деления на BA16.
'''
##a = []
##l = ['']
##for x1 in range(16):
##    for x2 in range(16):
##        x = int('1' + hex(x1)[2::] + 'DED' + hex(x2)[2::] + 'BABA', 16)
##        if x % int('BA',16) == 0:
##            a.append(x)
##a.sort(reverse=True)
##for i in a:
##    print(i,i//int('BA',16))

#10
''' Номер из Полякова 214
(Б. Михлин) Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
- символ «?» означает ровно одну произвольную цифру;
- символ «*» означает любую последовательность цифр произвольной длины; в том числе «*» может задавать и пустую последовательность.
Например, маске 123*4?5 соответствуют числа 123405 и 12300425. Найдите все натуральные числа, делящиеся нацело на 1011012, двоичный код которых
соответствует маске 1 ? 1 ? 1 ? 1 ? 1 ?? 1.
В ответе запишите найденные числа в десятичной системе счисления в порядке убывания, а справа от каждого числа – соответствующее частное
от деления на 1011012.
маске 1 ? 1 ? 1 ? 1 ? 1 ?? 1
'''
##from itertools import product
##a = []
##for x1, x2, x3, x4, x5, x6 in product('01', repeat=6):
##    x = int('1' + x1 + '1' + x2 + '1' + x3 + '1' + x4 + '1' + x5 + x6 + '1', 2)
##    if x % int('101101', 2) == 0:
##        a.append(x)
##a.sort(reverse=True)
##for i in a :
##    print(i, i // int('101101',2))

#11
''' Номер с Полякова 257
(К. Багдасарян) Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
- символ «Ч» означает ровно одну произвольную четную цифру;
- символ «Н» означает ровно одну произвольную нечетную цифру;
- символ «*» означает любую последовательность цифр произвольной длины; в том числе «*» может задавать и пустую последовательность.
Например, маске *ЧН2 соответствуют числа 7232, 612, 444692 и т.д. Среди натуральных чисел, не превышающих 108, найдите все числа,
соответствующие маске 123*НЧ56, делящиеся на 206 без остатка.
В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания,
а во втором столбце – соответствующие им результаты деления этих чисел на 206.
'''
##from itertools import product
##a = []
##l = [''] + list('0123456789')
##ch = ['0','2','4','6','8']
##nch = ['1','3','5','7','9']
##for x1 in l:
##    for x2 in ch:
##        for x3 in nch:
##            x = int('123' + x1 + x3 + x2 + '56')
##            if not (x % 206) :
##                a.append(x)
##a.sort()
##for i in a :
##    print(i, i // 206)

#12
''' Номер с Полякова 258
(К. Багдасарян) Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
- символ «Ч» означает ровно одну произвольную четную цифру;
- символ «Н» означает ровно одну произвольную нечетную цифру.
Например, маске ЧН2 соответствуют числа 232, 612, 692 и т.д. Среди натуральных чисел, не превышающих 107, найдите все числа, соответствующие
маске 1ЧНЧНЧН, делящиеся на 4023 без остатка.
В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания,
а во втором столбце – соответствующие им результаты деления этих чисел на 4023.
'''
##from iertools import product
##a = []
##l = [''] + list('0123456789')
##ch = ['0','2','4','6','8']
##nch = ['1','3','5','7','9']
##for x1 in l:
##    for x2 in ch:
##        for x3 in nch:
##            x = int('123' + x1 + x3 + x2 + '56')
##            if not (x % 4023) :
##                a.append(x)
##a.sort()
##for i in a :
##    print(i, i // 4023)

#13
'''
(В. Селезнев) Назовём маской числа последовательность цифр, в которой также могут
встречаться следующие символы:
- символ «?» означает ровно одну произвольную цифру;
- символ «*» означает любую последовательность цифр произвольной длины; в том числе
«*» может задавать и пустую последовательность.
Среди натуральных чисел, больших 2352000, найдите числа, все простые делители которых,
выписанные без пробелов по возрастанию, образуют число, соответствующее маске
«10*29». Например, число 234566 имеет 3 простых делителя: 2, 17, 6899, они образуют
число 2176899, которое соответствует маске «21*9». В ответе укажите первые 5 найденных
чисел в порядке возрастания, справа от каждого числа запишите его наибольший простой
делитель.
'''
##def dels(x):
##    a = []
##    i = 1
##    while i**2 <= x:
##        if i**2 == x:
##            a.append(i)
##        elif x % i == 0:
##            a += [i, x // i]
##        i += 1
##    a.sort()
##    return a
##
##def prime(x):
##    if x < 2:
##        return False
##    i = 2
##    while i**2 < x:
##        if x % i == 0:
##            return False
##        i += 1
##    return True
##
###print(dels(2352000))
##w = []
##for i in dels(234566):
##    if prime(i) == True:
##        w.append()
##print()

'''
    Этот пример будет предназначен для сложных примеров, которые нужно решить
'''
# №1
''' А.Агафонцев
Среди чисел не превышающих 10**7, найдите 5 наибольших чисел, удовлетворяющих маске 9?*55*7. Выделите эти числа
в порядке возрастания, справа от каждого числа вывведите остаток от деления суммы его делителей на 21.
'''

