##def f(x):
##    s = bin(x)[2:]
##    y = sum(map(int, s))
##    if y % 2 == 0:
##        s = '10' + s[2:] + '0'
##    else:
##        s = '11' + s[2:] + '1'
##    return int(s,2)
##print()
###
##def f(x):
##    x = bin(x)[2:]
##    из тетради дата 14.09.2022

#из 03.10
##def f(n):
##    h= bin(n)[2:]
##    for i in range(0,2):
##        if h.count('1') % 2 == 0:
##            h += '1'
##        else:
##            h+='0'
##        i+=1
##    return int(h,2)
##for i in range(1,1000):
##    if f(i) < 171:
##        print(i)
    
##def f(n):
##    h = bin(n)[2:]
##    if n % 2 == 0:
##        h = h + bin(int(h.count('1')))[2:]
##    else:
##        h = '1' + h + '00'
##    return int(h,2)
##for i in range(1,1000):
##    if f(i) > 215:
##        print(i)
##        break

'''
number 195
195)	Автомат обрабатывает натуральное число N по следующему алгоритму: 
1. Строится двоичная запись числа N. 
2. Складываются все цифры полученной двоичной записи. В конец записи (справа) дописывается остаток от деления полученной суммы на 2. 
3. Предыдущий пункт повторяется для записи с добавленной цифрой. 
4. Результат переводится в десятичную систему и выводится на экран. 
Пример. Дано число N = 13. Алгоритм работает следующим образом: 
1. Двоичная запись числа N: 1101. 
2. Сумма цифр двоичной записи 3, остаток от деления на 2 равен 1, новая запись 11011. 
3. Сумма цифр полученной записи 4, остаток от деления на 2 равен 0, новая запись 110110. 
4. На экран выводится число 54. 
Какое наибольшее число, меньшее 50, может появиться на экране в результате работы автомата?
'''
##def f(n):    
##    h = bin(n)[2:]
##    ch = h.count('1')
##    if ch % 2 == 0 :
##        h = str(ch%2) + h
##    else:
##        h = str(ch%2) + h
##    return int(h,2)
##for i in range(1,1000):
##    if f(i) < 50:
##        print(i)

# НОМЕР 196
##def f(n):
##    h = bin(n)[2:]
##    ch = h.count('1')
##    if ch % 2 == 0 :
##        h = str(ch % 2)+ h
##    else:
##        h = str(ch % 2) + h
##    return int(h,2)
##for i in range(1,10000):
##    if f(i) < 70:
##        print(i)       

#НОМЕР 197
##def f(n):
##    h = bin(n)[2:] # Когда переводим в какую-то СИ, то она переводится в строку
##    ch = h.count('1')
##    if ch % 2 == 0 :
##        h = str(ch % 2) + h 
##    else:
##        h = str(ch % 2) + h 
##    return int(h,2) # Переводим из 2 в 10
##for i in range(1,1000):
##    if f(i) < 86 :
##        print(i)

'''
NUMBER 211
Автомат обрабатывает трёхзначное натуральное число N по следующему алгоритму.
1. Из цифр, образующих десятичную запись N, строятся наибольшее и наименьшее 
   возможные двузначные числа (числа не могут начинаться с нуля).
2. На экран выводится разность полученных двузначных чисел.
Пример. Дано число N = 351. Алгоритм работает следующим образом.
1. Наибольшее двузначное число из заданных цифр – 53, наименьшее – 13.
2. На экран выводится разность 53 – 13 = 40.
Чему равно наименьшее возможное трёхзначное число N, в результате обработки которого на экране автомата появится число 60?
'''
##from itertools import product
##for i in product('0123456789', repeat=3):
##    if i[0] == '0':
##        continue
##    mn = int(''.join(sorted(list(i))[:2]))
##    mx = int(''.join(sorted(list(i), reverse=True)[:2]))
##    if not(10 <= mn <= 99):
##        continue
##    if not(10 <= mx <= 99):
##        continue
##    r = mx - mn
##    if r == 60:
##        print(i, r, mx, mn)
##        break
    
'''
number 212
Чему равно наибольшее возможное трёхзначное число N, в результате обработки которого на экране автомата появится число 50?
'''
##from itertools import product
##for i in product('0123456789', repeat=3):
##    if i[0] == '0':
##        continue
##    mn = int(''.join(sorted(list(i))[:2]))
##    mx = int(''.join(sorted(list(i), reverse=True)[:2]))
##    if not(10 <= mn <= 99):
##        continue
##    if not(10 <= mx <= 99):
##        continue
##    r = mx - mn
##    if r == 50:
##        print(i, r, mx, mn)
        #НЕ ПИШЕМ BREAK так как спрашивают БОЛЬШЕЕ число

'''
number 216
Чему равно количество трёхзначных чисел N, в результате обработки которых на экране автомата появится число 58?
'''
##from itertools import product
##c = 0
##for i in product('0123456789',repeat = 3):
##    if i[0] == 0:
##        continue
##    mn = int(''.join(sorted(list(i))[2:]))
##    mx = int(''.join(sorted(list(i), reverse = True)[2:]))
##    if 10 <= mn <= 99:
##        continue 
##    if 10 <= mx <= 99:
##        continue
##    r = mx - mn
##    if r == 58:
##        c+=1
##print(c) # Ответ 0

'''
number 221
Автомат обрабатывает трёхзначное натуральное число N по следующему алгоритму.
1. Из цифр, образующих десятичную запись N, строятся наибольшее и наименьшее 
            возможные двузначные числа (числа не могут начинаться с нуля).
2. На экран выводится разность полученных двузначных чисел.
Пример. Дано число N = 351. Алгоритм работает следующим образом.
1. Наибольшее двузначное число из заданных цифр – 53, наименьшее – 13.
2. На экран выводится разность 53 – 13 = 40.
Чему равно количество чисел N на отрезке [900; 999], в результате обработки которых на экране автомата появится число 70?

'''
##from itertools import product
##c = 0
##for i in range(900, 1000):
##    l = list(map(int, str(i))) #Целое числа делятся по цифрам !
##    l.sort() #Сортируем все цифры от наименьшему к большему
##    mx = l[-1] * 10 + l[-2] # Последнее число умножаем на 10 и прибавляем предпоследнее
##    mn = l[0] * 10 + l[1] # Первое число умножаем на 10 и приблавляем второе
##    if l[0] == 0: 
##        if l[1] != 0:
##            mn = l[1] * 10
##        else:
##            continue
##    r = mx - mn
##    if r == 70:
##        c+=1
##print(c)


'''
На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R
следующим образом.
1. Строится двоичная запись числа N.
2. К этой записи дописываются справа ещё два разряда по следующему правилу:а) складываются все цифры двоичной записи, и остаток от деления суммы на 2 дописывается в конец
числа (справа). Например, запись 11100 преобразуется в запись 111001;
б) над этой записью производятся те же действия – справа дописывается остаток от деления суммы
цифр на 2.
Полученная таким образом запись (в ней на два разряда больше, чем в записи исходного числа N)
является двоичной записью искомого числа R. Сколько различных чисел, принадлежащих отрезку
[90; 160], могут появиться на экране в результате работы автомата?
'''
##a = set()
##for i in range(100000):
##    s = bin(i)[2:]
##    for i in range(2):
##        b = sum(map(int,s))
##        s += str(b % 2)
##    if 90 <= int(s, 2) <= 160:
##        a.add(s)
##print(a)
##print(len(a))
