##def f(N):
##    N = bin(N)[2:]
##    R = int(N)
##    s = 0
##    while R > 0:
##        s += R % 10
##        R //=10
##    N = str(N)
##    if s % 2 == 0:
##        N = N + '0'
##        N1 = '10' + x[2:]
##    else:
##        N = N + '1'
##        N1 = '11' + x[2:]
##    z = int(N1,2)
##    return int(N)
##for a in range(100):
##    if f(a) > 40:
##        print(a, f(a))
##        break
'''
# Автомат обрабатывает натуральное число N по следующему алгоритму:
#1) Строится двоичная запись числа N.
#2) Запись «переворачивается», то есть читается справа налево. Если при этом появляются ведущие нули, они отбрасываются.
#3) Полученное число переводится в десятичную систему счисления и выводится на экран.
#Какое наименьшее число, превышающее 500, после обработки автоматом даёт результат 15?
'''
##for n in range(500,1000):
##    s = bin(n)[2:]#перевод в 2ичную
##    s = str(s) # перевод в строку
##    s = s[::-1] # отзеркадивание
##    s = s[s.find('1'):] # удаляет ведущие нули 
##    r = int(s,2) # переовод в 10ную
##    if r == 15:# 
##        print(n)# 
##        break# 
'''
Автомат обрабатывает натуральное число N по следующему алгоритму:
1) Строится двоичная запись числа N.
2) Запись «переворачивается», то есть читается справа налево. Если при этом появляются ведущие нули, они отбрасываются.
3) Полученное число переводится в десятичную систему счисления и выводится на экран.
Какое наименьшее число, превышающее 100, после обработки автоматом даёт результат 9?
'''
##for i in range(100,500):
##    s = bin(i)[2:]
##    s = str(s)
##    s = s[::-1]
##    s = s[s.find('1'):]
##    r = int(s,2)
##    if r == 9:
##        print(i)
##        break
##a = 20
##s = bin(a)[2:]
##s = str(s)
##s = s[::-1]
##s = s[s.find('1'):]
##print(s)

##a = int(input(),2)
##s = bin(a)[2:]
####s = s[::-1]
##s = str(s)
##s = s[s.find('1'):]
##print(s)

'''
(Е. Джобс) Автомат обрабатывает десятичное натуральное число N по следующему алгоритму:
1) Строится двоичная запись числа N.
2) К этой записи справа дописывается 0, если число нечетное, и слева 1 в обратном случае.
3) Если единиц в двоичном числе получилось четное количество, справа дописывается 1, иначе 0.
Например, двоичная запись 1010 числа 10 будет преобразована в 110100.
Полученная таким образом запись (в ней на два разряда больше, чем в записи исходного числа N) является двоичной записью числа – результата работы данного алгоритма.
Укажите минимальное число N, для которого результат работы алгоритма будет больше 228. В ответе это число запишите в десятичной системе счисления.
'''
##mn = 10**10
##for i in range(228,500):
##    s = bin(i)[2:]
##    if i % 2 != 0 :
##        s = str(s)
##        s = s + '0'
##    else:
##        s = str(s)
##        s = '1' + s
##    if s.count('1') % 2 == 0:
##        s = s + '1'
##    else :
##        s = s + '0'
##    #r = int(s,2)
##print(i)

'''
На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R
следующим образом.
1) Строится двоичная запись числа N.
2) К этой записи дописываются ещё несколько разрядов по следующему правилу: если N чётное, то к
нему слева дописывается 10, а справа - 1, если N нечетное – слева дописывается 1 и справа 01;
3) Результат переводится в десятичную систему и выводится на экран.
Пример. Дано число N = 13. Алгоритм работает следующим образом:
1. Двоичная запись числа N: 1101.
2. Число нечетное, следовательно слева дописываем 1, справа 01 – 1+1101+01 = 1110101.
3. На экран выводится число 117.
В результате работы автомата на экране появилось число, большее 420. Для какого наименьшего
значения N данная ситуация возможна?

'''
##for n in range(1,1000):
##    s = bin(n)[2:]
##    s = str(s)
##    if n % 2 == 0 :
##        s = '10' + s + '1'
##    else:
##        s = '1' + s + '01'
##    r = int(s,2)
##    if r > 420:
##        print(n)
##        break

'''
(Пробный КЕГЭ, 2022) На вход алгоритма подаётся натуральное число N. Алгоритм строит по
нему новое число R следующим образом.
1) Строится двоичная запись числа N.
2) К этой записи дописываются ещё несколько разрядов по следующему правилу:
а) если N чётное, то к нему справа приписывается в двоичном виде сумма цифр его двоичной
записи;
б) если N нечётное, то к нему справа приписываются два нуля, а слева единица.
Например, двоичная запись числа 1101 будет преобразована в 1110100.
Полученная таким образом запись (в ней как минимум на один разряд больше, чем в записи
исходного числа N) является двоичной записью искомого числа R.
Укажите наименьшее число N, для которого результат работы данного алгоритма больше 215. В
ответе это число запишите в десятичной системе счисления.
'''
##for n in range(1,1000):
##    s = bin(n)[2:]
##    s = str(s)
##    
##    if n % 2 == 0 :
##        s = s + sum(map(int,s)) #сумму цифр из двоичного кода, который был строкой
##    else:
##        s = '1' + s + '00'
##    r = int(s,2)
##    if r > 215 :
##        print(n)
##        break
##for n in range(1,1000):
##    s = bin(n)[2:]
##print(s)
##print(sum(map(int,s)))
 
'''
(А. Сардарян) На вход алгоритма подаётся два натуральных числа N и M. Алгоритм строит по ним
новое число R следующим образом.
1) Вычисляется произведение P1
 всех ненулевых чётных цифр чисел N и M.
2) Вычисляется произведение P2
 всех нечётных цифр чисел N и M.
3) Результат R вычисляется как модуль разности P1
 и P2
.
Например, для N = 256 и M = 108 получаем P1
 = 2·6·8 = 96 и P2
 = 5·1 = 5, так что R = |96 - 5|= 91.
Укажите минимальное число M, при котором для N = 120 получается R = 29.

'''
####

'''
number 195
195)	Автомат обрабатывает натуральное число N по следующему алгоритму: 
1. Строится двоичная запись числа N. 
2. Складываются все цифры полученной двоичной записи. В конец записи (справа) дописывается остаток от деления полученной суммы на 2. 
3. Предыдущий пункт повторяется для записи с добавленной цифрой. 
4. Результат переводится в десятичную систему и выводится на экран. 
Пример. Дано число N = 13. Алгоритм работает следующим образом: 
1. Двоичная запись числа N: 1101. 
2. Сумма цифр двоичной записи 3, остаток от деления на 2 равен 1, новая запись 11011. 
3. Сумма цифр полученной записи 4, остаток от деления на 2 равен 0, новая запись 110110. 
4. На экран выводится число 54. 
Какое наибольшее число, меньшее 50, может появиться на экране в результате работы автомата?
'''
##def f(n):    
##    h = bin(n)[2:]
##    ch = h.count('1')
##    if ch % 2 == 0 :
##        h = str(ch%2) + h
##    else:
##        h = str(ch%2) + h
##    return int(h,2)
##for i in range(1,1000):
##    if f(i) < 50:
##        print(i)

# НОМЕР 196
##def f(n):
##    h = bin(n)[2:]
##    ch = h.count('1')
##    if ch % 2 == 0 :
##        h = str(ch % 2)+ h
##    else:
##        h = str(ch % 2) + h
##    return int(h,2)
##for i in range(1,10000):
##    if f(i) < 70:
##        print(i)       

#НОМЕР 197
##def f(n):
##    h = bin(n)[2:] # Когда переводим в какую-то СИ, то она переводится в строку
##    ch = h.count('1')
##    if ch % 2 == 0 :
##        h = str(ch % 2) + h 
##    else:
##        h = str(ch % 2) + h 
##    return int(h,2) # Переводим из 2 в 10
##for i in range(1,1000):
##    if f(i) < 86 :
##        print(i)

'''
NUMBER 211
Автомат обрабатывает трёхзначное натуральное число N по следующему алгоритму.
1. Из цифр, образующих десятичную запись N, строятся наибольшее и наименьшее 
   возможные двузначные числа (числа не могут начинаться с нуля).
2. На экран выводится разность полученных двузначных чисел.
Пример. Дано число N = 351. Алгоритм работает следующим образом.
1. Наибольшее двузначное число из заданных цифр – 53, наименьшее – 13.
2. На экран выводится разность 53 – 13 = 40.
Чему равно наименьшее возможное трёхзначное число N, в результате обработки которого на экране автомата появится число 60?
'''
##from itertools import product
##for i in product('0123456789', repeat=3):
##    if i[0] == '0':
##        continue
##    mn = int(''.join(sorted(list(i))[:2]))
##    mx = int(''.join(sorted(list(i), reverse=True)[:2]))
##    if not(10 <= mn <= 99):
##        continue
##    if not(10 <= mx <= 99):
##        continue
##    r = mx - mn
##    if r == 60:
##        print(i, r, mx, mn)
##        break
    
'''
number 212
Чему равно наибольшее возможное трёхзначное число N, в результате обработки которого на экране автомата появится число 50?
'''
##from itertools import product
##for i in product('0123456789', repeat=3):
##    if i[0] == '0':
##        continue
##    mn = int(''.join(sorted(list(i))[:2]))
##    mx = int(''.join(sorted(list(i), reverse=True)[:2]))
##    if not(10 <= mn <= 99):
##        continue
##    if not(10 <= mx <= 99):
##        continue
##    r = mx - mn
##    if r == 50:
##        print(i, r, mx, mn)
        #НЕ ПИШЕМ BREAK так как спрашивают БОЛЬШЕЕ число

'''
number 216
Чему равно количество трёхзначных чисел N, в результате обработки которых на экране автомата появится число 58?
'''
##from itertools import product
##c = 0
##for i in product('0123456789',repeat = 3):
##    if i[0] == 0:
##        continue
##    mn = int(''.join(sorted(list(i))[2:]))
##    mx = int(''.join(sorted(list(i), reverse = True)[2:]))
##    if 10 <= mn <= 99:
##        continue 
##    if 10 <= mx <= 99:
##        continue
##    r = mx - mn
##    if r == 58:
##        c+=1
##print(c) # Ответ 0

'''
number 221
Автомат обрабатывает трёхзначное натуральное число N по следующему алгоритму.
1. Из цифр, образующих десятичную запись N, строятся наибольшее и наименьшее 
            возможные двузначные числа (числа не могут начинаться с нуля).
2. На экран выводится разность полученных двузначных чисел.
Пример. Дано число N = 351. Алгоритм работает следующим образом.
1. Наибольшее двузначное число из заданных цифр – 53, наименьшее – 13.
2. На экран выводится разность 53 – 13 = 40.
Чему равно количество чисел N на отрезке [900; 999], в результате обработки которых на экране автомата появится число 70?

'''
##from itertools import product
##c = 0
##for i in range(900, 1000):
##    l = list(map(int, str(i))) #Целое числа делятся по цифрам !
##    l.sort() #Сортируем все цифры от наименьшему к большему
##    mx = l[-1] * 10 + l[-2] # Последнее число умножаем на 10 и прибавляем предпоследнее
##    mn = l[0] * 10 + l[1] # Первое число умножаем на 10 и приблавляем второе
##    if l[0] == 0: 
##        if l[1] != 0:
##            mn = l[1] * 10
##        else:
##            continue
##    r = mx - mn
##    if r == 70:
##        c+=1
##print(c)
